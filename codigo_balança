#include <stdio.h>
#include <locale.h>
#include <string.h>
#include <stdlib.h> 
#include <ctype.h>
#include <Windows.h>

// Estrutura para armazenar c�digo, nome, valor e tipo de venda (quilo ou granel)
struct Produto {
    int codigo_produto, tipo_produto;
    char nome_produto[30];
    float valor;
};

// Array para armazenar os produtos
struct Produto listaDeProdutos[100];
int totalProdutos = 0;

// Fun��o para limpar a tela
void limparTela() {
    #ifdef _WIN32
        system("cls");   // Comando para limpar a tela no Windows
    #else
        system("clear"); // Comando para limpar a tela no Linux ou macOS
    #endif
}

// Fun��o para limpar o buffer de entrada
void limparBuffer() {
    int c;
    while ((c = getchar()) != '\n' && c != EOF);
}

// Fun��o para ler e validar um n�mero inteiro
int lerInteiro() {
    int numero;
    char c;

    while (1) {
        if (scanf("%d", &numero) == 1) {
            limparBuffer();
            return numero;
        } else {
            limparBuffer();
            printf("Entrada inv�lida! Por favor, digite uma op��o v�lida: ");
        }
    }
}

// Fun��o para ler e validar um valor real
float lerValorReal() {
    float valor;
    char c; 
    while (1) {
        if (scanf("%f", &valor) == 1) {
            limparBuffer();  
            return valor;   
        } else {
            limparBuffer(); 
            printf("Entrada inv�lida! Por favor, digite um valor real:\n");
        }
    }
}

// Fun��o para ler apenas letras
void lerNomeProduto(char *nome) {
    while (1) {
        printf("Digite o nome do produto: ");
        fgets(nome, 30, stdin);
        
        // Remove o caractere de nova linha se presente
        nome[strcspn(nome, "\n")] = 0;

        // Verifica se o nome cont�m apenas letras e espa�os
        int valido = 1; // Assume que � v�lido
        for (int i = 0; nome[i] != '\0'; i++) {
            if (!isalpha(nome[i]) && nome[i] != ' ') { // Aceita apenas letras e espa�os
                valido = 0; // N�o � v�lido
                break;
            }
        }

        if (valido) {
            break; // Nome v�lido, sai do loop
        } else {
            printf("Entrada inv�lida! O nome do produto deve conter apenas letras.\n");
        }
    }
}

// Fun��o para verificar se um c�digo de produto j� existe
int codigoExiste(int codigo) {
    for (int i = 0; i < totalProdutos; i++) {
        if (listaDeProdutos[i].codigo_produto == codigo) {
            return 1;
        }
    }
    return 0;
}

// Inicializa��o dos produtos
void inicializarProdutos() {
    listaDeProdutos[0].codigo_produto = 1;
    strcpy(listaDeProdutos[0].nome_produto, "Manga");
    listaDeProdutos[0].valor = 7.99;
    listaDeProdutos[0].tipo_produto = 1;

    listaDeProdutos[1].codigo_produto = 2;
    strcpy(listaDeProdutos[1].nome_produto, "Banana");
    listaDeProdutos[1].valor = 5.99;
    listaDeProdutos[1].tipo_produto = 1;

    listaDeProdutos[2].codigo_produto = 3;
    strcpy(listaDeProdutos[2].nome_produto, "Castanha");
    listaDeProdutos[2].valor = 13.99;
    listaDeProdutos[2].tipo_produto = 2;
    
    listaDeProdutos[3].codigo_produto = 4;
    strcpy(listaDeProdutos[3].nome_produto, "Amendoim");
    listaDeProdutos[3].valor = 12.99;
    listaDeProdutos[3].tipo_produto = 2;

    totalProdutos = 4;
}

// Fun��o para listar os produtos
void listarProdutos() {
    printf("\n\n------------ LISTA DE PRODUTOS -------------\n");

    printf("Produtos por QUILO:\n");
    printf("C�digo \t Produto \t Valor (R$/Kg)\n");
    for (int i = 0; i < totalProdutos; i++) {
        if (listaDeProdutos[i].tipo_produto == 1) {
            printf("%03d\t %-10s\t R$ %.2f\n", listaDeProdutos[i].codigo_produto, listaDeProdutos[i].nome_produto, listaDeProdutos[i].valor);
        }
    }
    
    printf("\nProdutos por GRANEL:\n");
    printf("C�digo \t Produto \t Valor (R$/Unidade)\n");
    for (int i = 0; i < totalProdutos; i++) {
        if (listaDeProdutos[i].tipo_produto == 2) {
            printf("%03d\t %-10s\t R$ %.2f\n", listaDeProdutos[i].codigo_produto, listaDeProdutos[i].nome_produto, listaDeProdutos[i].valor);
        }
    }
    
    printf("--------------------------------------------\n\n");
    system("pause");
    system("cls");
}

// Fun��o para cadastrar um novo produto
void cadastrarProduto() {
    if (totalProdutos < 100) {
        int opcao_cadastrarMais;
        int codigo;
        
        printf("\n\n------------ CADASTRAR PRODUTO -------------\n");
        
        // Verifica se o c�digo j� existe
        do {
            printf("Digite o c�digo do novo produto: ");
            codigo = lerInteiro();
            
            if (codigoExiste(codigo)) {
                printf("C�digo existente! Por favor, insira um c�digo diferente.\n");
            }
        } while (codigoExiste(codigo));

        // Quando o c�digo for v�lido, armazena o produto
        listaDeProdutos[totalProdutos].codigo_produto = codigo;

        lerNomeProduto(listaDeProdutos[totalProdutos].nome_produto);
        
        printf("Digite o valor do produto (R$) (utilize .): ");
        listaDeProdutos[totalProdutos].valor = lerValorReal();
        
        printf("O produto ser� vendido por quilo ou granel?:\n");
        printf("1. Quilo\n");
        printf("2. Granel\n");
        printf("Informe uma op��o v�lida e aperte a tecla enter: ");
        
        int opcao = lerInteiro();

        if (opcao == 1 || opcao == 2) {
            listaDeProdutos[totalProdutos].tipo_produto = opcao;
            totalProdutos++;
            printf("Produto cadastrado com sucesso!\n\n");
        } else {
            printf("Op��o inv�lida! Produto n�o cadastrado.\n");
        }

        // Pergunta se o usu�rio deseja cadastrar mais algum produto
        char continuar;
        printf("Deseja cadastrar mais algum produto?\nDigite 's' para Sim e 'n' para N�o (s/n): ");
        scanf(" %c", &continuar);
        limparBuffer();
        if (continuar == 's' || continuar == 'S') {
            cadastrarProduto(); // Recurs�o para cadastrar outro produto
        }
    
    } else {
        printf("Limite de produtos atingido!\n");
    }
    system("cls");
}

// Fun��o para excluir um produto
void excluirProduto() {
    int codigo_produto;

    printf("\n\n------------- EXCLUIR PRODUTO --------------\n");
    while (1) {
        printf("Digite o c�digo do produto que deseja excluir: ");
        codigo_produto = lerInteiro();

        int encontrado = 0;
        for (int i = 0; i < totalProdutos; i++) {
            if (listaDeProdutos[i].codigo_produto == codigo_produto) {
                encontrado = 1;
                // Pergunta confirma��o
                printf("Tem certeza que deseja excluir o produto '%s'? \n\nDigite 's' para Sim e 'n' para N�o (s/n): ", listaDeProdutos[i].nome_produto);
                char confirmar;
                confirmar = getchar();
                system("cls");
                limparBuffer(); 

                if (confirmar == 's' || confirmar == 'S') {
                    for (int j = i; j < totalProdutos - 1; j++) {
                        listaDeProdutos[j] = listaDeProdutos[j + 1];
                    }
                    totalProdutos--;
                    printf("\nProduto com c�digo %d exclu�do com sucesso!\n\n", codigo_produto);
                } else {
                    printf("\nExclus�o cancelada.\n");
                }
                break;
            }
        }

        if (!encontrado) {
            printf("\nProduto com c�digo %d n�o encontrado.\n", codigo_produto);
        }

        // Pergunta se deseja excluir mais algum produto
        printf("\nDeseja excluir mais algum produto?\nDigite 's' para Sim e 'n' para N�o (s/n): ");
        char continuar;
        continuar = getchar();
        system("cls");
        limparBuffer();

        if (continuar != 's' && continuar != 'S') {
            break; 
        }
    }
    system("cls");
} 

// Fun��o para calcular o pre�o com base no tipo (quilo ou granel)
void calcularPreco() {
    int codigo;
    char continuar;
    float totalCompra = 0;  // Vari�vel para armazenar o total da compra

    do {
        printf("\n\n-------------- CALCULAR PRE�O --------------\n");
        printf("Digite o c�digo do produto que deseja calcular o valor: ");
        codigo = lerInteiro(); // L� o c�digo inserido pelo usu�rio
        
        int encontrado = 0; // Vari�vel que verifica se o produto foi encontrado
        for (int i = 0; i < totalProdutos; i++) {
            if (listaDeProdutos[i].codigo_produto == codigo) {
                encontrado = 1;
                
                // Verifica se o produto � vendido por quilo
                if (listaDeProdutos[i].tipo_produto == 1) {
                    float peso;
                    printf("Digite o peso em quilos: ");
                    peso = lerValorReal(); // L� o peso inserido pelo usu�rio
                    // Calcula e exibe o valor total baseado no peso
                    float valorProduto = listaDeProdutos[i].valor * peso;
                    printf("O valor total do produto %s �: R$ %.2f\n", listaDeProdutos[i].nome_produto, valorProduto);
                    totalCompra += valorProduto; // Soma o valor ao total da compra
                    
                // Caso contr�rio, o produto � vendido por unidade
                } else {
                    int quantidade;
                    printf("Digite a quantidade (unidades): ");
                    quantidade = lerInteiro(); // L� a quantidade inserida pelo usu�rio
                    // Calcula e exibe o valor total baseado na quantidade
                    float valorProduto = listaDeProdutos[i].valor * quantidade;
                    printf("O valor total do produto %s �: R$ %.2f\n", listaDeProdutos[i].nome_produto, valorProduto);
                    totalCompra += valorProduto;  // Soma o valor ao total da compra
                }
                break; // Encerra o loop ao encontrar o produto
            }
        }
        
        if (!encontrado) { // Caso o produto n�o seja encontrado na lista
            printf("Produto com c�digo %d n�o encontrado.\n", codigo);
        }

        // Pergunta ao usu�rio se deseja calcular o pre�o de outro produto
        printf("\nDeseja calcular o pre�o de outro produto?\nDigite 's' para Sim e 'n' para N�o (s/n): ");
        scanf(" %c", &continuar);
		system("cls"); // L� a escolha do usu�rio
        limparBuffer(); // Limpa o buffer de entrada para evitar erros na pr�xima leitura

    } while (continuar == 's' || continuar == 'S'); // Continua se o usu�rio digitar 's' ou 'S'
    
    // Exibir o total da compra ao final
    printf("\nO valor total da compra �: R$ %.2f\n\n", totalCompra);
    system("pause");
    system("cls");
}

// Fun��o principal
	int main() {
	setlocale(LC_ALL, "Portuguese");
	system("color F0");
	SetConsoleTitle(" BALANCA/REGISTRADORA");
    int opcao;

    inicializarProdutos();

    do {
      
        
        printf("------------------------ MENU ------------------------\n\n");
        printf("1. Listar Produtos\n");
        printf("2. Cadastrar Produto\n");
        printf("3. Excluir Produto\n");
        printf("4. Calcular Compra\n");
        printf("5. Sair do Programa\n\n");
        printf("------------------------------------------------------\n\n");
        printf("Digite a op��o desejada: ");
        opcao = lerInteiro();
        
        system("cls");

        switch (opcao) {
            case 1:
                listarProdutos();
                break;
            case 2:
                cadastrarProduto();
                break;
            case 3:
                excluirProduto();
                break;
            case 4:
                calcularPreco();
                break;
            case 5:
                printf("Saindo do programa...\n");
                break;
            default:
                printf("Op��o inv�lida! Por favor, digite uma op��o v�lida.\n");
                break;
        }
    } while (opcao != 5);
    
    return 0;
}
